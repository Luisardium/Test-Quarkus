import static org.junit.Assert.*;

import com.beesion.ms.ejercicios.ValidarSudoku;
import org.junit.Test;

public class SudokuTest {

    @Test
    public void testSudokuValido() {
        char[][] board = {
                {'5','3','.','.','7','.','.','.','.'},
                {'6','.','.','1','9','5','.','.','.'},
                {'.','9','8','.','.','.','.','6','.'},
                {'8','.','.','.','6','.','.','.','3'},
                {'4','.','.','8','.','3','.','.','1'},
                {'7','.','.','.','2','.','.','.','6'},
                {'.','6','.','.','.','.','2','8','.'},
                {'.','.','.','4','1','9','.','.','5'},
                {'.','.','.','.','8','.','.','7','9'}
        };
        assertTrue(ValidarSudoku.isValidSudoku(board));
    }

    @Test
    public void testFilaInvalida() {
        char[][] board = {
                {'5','3','5','.','7','.','.','.','.'}, // repetido '5' en fila
                {'6','.','.','1','9','5','.','.','.'},
                {'.','9','8','.','.','.','.','6','.'},
                {'8','.','.','.','6','.','.','.','3'},
                {'4','.','.','8','.','3','.','.','1'},
                {'7','.','.','.','2','.','.','.','6'},
                {'.','6','.','.','.','.','2','8','.'},
                {'.','.','.','4','1','9','.','.','5'},
                {'.','.','.','.','8','.','.','7','9'}
        };
        assertFalse(ValidarSudoku.isValidSudoku(board));
    }

    @Test
    public void testColumnaInvalida() {
        char[][] board = {
                {'5','3','.','.','7','.','.','.','.'},
                {'6','.','.','1','9','5','.','.','.'},
                {'5','9','8','.','.','.','.','6','.'}, // repetido '5' en columna
                {'8','.','.','.','6','.','.','.','3'},
                {'4','.','.','8','.','3','.','.','1'},
                {'7','.','.','.','2','.','.','.','6'},
                {'.','6','.','.','.','.','2','8','.'},
                {'.','.','.','4','1','9','.','.','5'},
                {'.','.','.','.','8','.','.','7','9'}
        };
        assertFalse(ValidarSudoku.isValidSudoku(board));
    }

    @Test
    public void testSubcuadroInvalido() {
        char[][] board = {
                {'5','3','.','.','7','.','.','.','.'},
                {'6','5','.','1','9','5','.','.','.'}, // repetido '5' en subcuadro
                {'.','9','8','.','.','.','.','6','.'},
                {'8','.','.','.','6','.','.','.','3'},
                {'4','.','.','8','.','3','.','.','1'},
                {'7','.','.','.','2','.','.','.','6'},
                {'.','6','.','.','.','.','2','8','.'},
                {'.','.','.','4','1','9','.','.','5'},
                {'.','.','.','.','8','.','.','7','9'}
        };
        assertFalse(ValidarSudoku.isValidSudoku(board));
    }
}

